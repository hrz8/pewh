org: hrz88
service: pewh

frameworkVersion: ^4.4.13
configValidationMode: error

provider:
  name: aws
  runtime: provided.al2
  architecture: arm64
  stage: ${opt:stage, 'local'}
  region: ${opt:region, 'us-east-1'}
  httpApi:
    cors:
      allowedOrigins:
        - '*'

custom:
  stage: ${opt:stage, 'local'}
  localstack:
    debug: false
    stages:
      - local
    host: http://localhost
    edgePort: 4566
    lambda:
      mountCode: false

plugins:
  - serverless-localstack

package:
  individually: true

functions:
  restapi:
    handler: bootstrap
    package:
      artifact: bin/restapi.zip
    events:
    - httpApi:
        method: GET
        path: /api/v1/rooms
    - httpApi:
        method: GET
        path: /api/v1/rooms/another
  websocket:
      handler: bootstrap
      package:
        artifact: bin/websocket.zip
      events:
      - websocket:
          route: $connect
      - websocket:
          route: $disconnect
      - websocket:
          route: publish
      - websocket:
          route: ping
      - websocket:
          route: $default
  bookingCreated:
    handler: bootstrap
    package:
      artifact: bin/bookingCreated.zip
    events:
      - sns:
          arn: !Ref BookingCreated
          topicName: booking-created-${sls:stage}
  bookingPaid:
    handler: bootstrap
    package:
      artifact: bin/bookingPaid.zip
    events:
      - sns:
          arn: !Ref BookingPaid
          topicName: booking-paid-${sls:stage}
  bookingCanceled:
    handler: bootstrap
    package:
      artifact: bin/bookingCanceled.zip
    reservedConcurrency: 1
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - BookingCanceled
              - Arn
  checkInStarted:
    handler: bootstrap
    package:
      artifact: bin/checkInStarted.zip
    reservedConcurrency: 30
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - CheckInStarted
              - Arn

resources:
  Resources:
    BookingCreated:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: 'Booking Created'
        TopicName: booking-created-${sls:stage}
    BookingPaid:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: 'Booking Paid'
        TopicName: booking-paid-${sls:stage}
    BookingCanceled:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: booking-canceled-${sls:stage}
        MessageRetentionPeriod: 86400
        VisibilityTimeout: 120
    CheckInStarted:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: check-in-started-${sls:stage}.fifo
        FifoQueue: true
        ContentBasedDeduplication: true
        MessageRetentionPeriod: 21600
        VisibilityTimeout: 15
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt:
              - CheckInStartedDlq
              - Arn
          maxReceiveCount: 5
    CheckInStartedDlq:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: check-in-started-dlq-${sls:stage}.fifo
        FifoQueue: true
        ContentBasedDeduplication: true
        MessageRetentionPeriod: 1209600
